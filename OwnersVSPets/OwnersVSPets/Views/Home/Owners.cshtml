<div class="page-header">
    <h1 class="text-center"> All Users </h1>
</div>
<div class="panel">
    <div class="form-inline">
        <div class="form-group">
            <div class="col-md-12">
                <input class="form-control" ng-model="ownerName" placeholder="Enter Pet Owner's Name" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <button class="btn btn-default" ng-click="addOwner(ownerName)">Add</button>
            </div>
        </div>
    </div>
    <br><br>
    <div>
        <div class="form-control">
            <p> Total count: {{ownersTotally}} </p>
        </div>
        <table class="table table-striped">
            <thead class="thead-inverse">
                <tr>
                    <th style="display:none;"></th>
                    <th style="border:1px solid black">Name</th>
                    <th style="border:1px solid black">Pets count</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="owner in owners">
                    <td style="display:none;">{{owner.ID}}</td>
                    <td><a ng-click="goToOwner(owner.ID)">{{owner.Name}}</a></td>
                    <td>{{owner.PetsAmount}} <input class="btn btn-default pull-right" type="button" value="Delete" data-ng-click="deleteOwner(owner.ID)" /></td>
                </tr>
            </tbody>
        </table>
        <p class="text-center">
            Pages
            <span ng-show="skipStartPages">...</span>
            <span style="padding-left:5px;" ng-repeat="page in pages"><a ng-click="getOwners(page)">{{page}}</a></span>
            <span style="padding-left:5px;" ng-show="skipEndPages">...</span>
        </p>
      </div>
</div>
@section Scripts { 
    <script>
        var opApp = angular.module('ownersPetsApp', []);
        opApp.controller("ownersPetsController", function ($scope, $http) {
            $scope.skipStartPages = false;
            $scope.skipEndPages = false;
            $scope.pages = [];
            $scope.curentPage = 1;
            $scope.ownersOnPage = 0;
            $scope.maxPagesAmount = 0;
            $scope.ownersTotally = 0;
            $scope.getOwners = function (fromPage) {
                if (fromPage === undefined || fromPage < 1) {
                    fromPage = $scope.curentPage;
                } else {
                    $scope.curentPage = fromPage;
                }
                $http({ method: 'GET', url: window.location.origin + '/api/owners', params: { 'page': fromPage } }).
                    then(function success(response) {
                        //console.log(response.data);
                        var ownerList = response.data.OwnerList;
                        $scope.ownersOnPage = response.data.Meta.ItemsOnPage;
                        $scope.ownersTotally = response.data.Meta.ItemsTotally;
                        $scope.maxPagesAmount = response.data.Meta.MaxPageAmount;
                        $scope.skipStartPages = false;
                        $scope.skipEndPages = false;
                        if (ownerList.length) {
                            if (fromPage===undefined) {
                                fromPage = 1;
                            } else {
                                fromPage = +fromPage;
                                if (fromPage < 1) {
                                    fromPage = 1;
                                }
                            }
                            var actualPagesAmount = Math.ceil($scope.ownersTotally / $scope.ownersOnPage);
                            if (actualPagesAmount > $scope.maxPagesAmount) {
                                fromPage = fromPage - Math.floor($scope.maxPagesAmount / 2);
                                if (fromPage < 1) {
                                    fromPage = 1;
                                }
                                if (actualPagesAmount > (fromPage + $scope.maxPagesAmount - 1)) {
                                    $scope.skipEndPages = true;
                                }
                                if (fromPage > (actualPagesAmount - $scope.maxPagesAmount + 1)) {
                                    fromPage = actualPagesAmount - $scope.maxPagesAmount + 1;
                                    if (fromPage < 1) {
                                        fromPage = 1;
                                    }
                                }
                                if (fromPage > 1) {
                                    $scope.skipStartPages = true;
                                }
                            } else {
                                fromPage = 1;
                            }
                            $scope.pages = [];
                            for (var i = fromPage; i < (fromPage + $scope.maxPagesAmount) ; i++) {
                                if (i > actualPagesAmount) {
                                    break;
                                }
                                $scope.pages[$scope.pages.length] = i;
                            }
                            if ($scope.pages.length==0) {
                                $scope.pages[0] = 1;
                            }
                        }
                        $scope.owners = ownerList;
                    }, function error(response) {
                        console.log(response.data);
                    })
            };
            $scope.getOwners();
            $scope.addOwner = function (ownerName) {
                if (ownerName) {
                    $http({ method: 'PUT', url: window.location.origin + '/api/owners', params: { 'ownerName': ownerName } }).
                        then(function success(response) {
                            //console.log(response.data);
                            $scope.getOwners();
                        }, function error(response) {
                            console.log(response.data);
                        })
                }    
            }
            $scope.deleteOwner = function (ownerID) {
                if (ownerID) {
                    $http({ method: 'DELETE', url: window.location.origin + '/api/owners', params: { 'ownerID': ownerID } }).
                        then(function success(response) {
                            //console.log(response.data);
                            $scope.getOwners();
                        }, function error(response) {
                            console.log(response.data);
                        })
                }
            }
            $scope.goToOwner = function (ownerID) {
                window.location.href = window.location.origin + '/Home/Pets?ownerID=' + ownerID;
            }
    });
    </script>
}
